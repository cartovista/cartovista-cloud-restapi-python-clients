# coding: utf-8

"""
    CartoVista REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import cartovista_cloud_clients
from cartovista_cloud_clients.api.layer_api import LayerApi  # noqa: E501
from cartovista_cloud_clients.rest import ApiException


class TestLayerApi(unittest.TestCase):
    """LayerApi unit test stubs"""

    def setUp(self):
        self.api = LayerApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_layer_append_to_layer(self):
        """Test case for layer_append_to_layer

        Appends the content of a file at the end of the layer. The file format must match the layer.  # noqa: E501
        """
        pass

    def test_layer_cancel_cluster_task(self):
        """Test case for layer_cancel_cluster_task

        Cancels the cluster generation for that layer.  # noqa: E501
        """
        pass

    def test_layer_create_layer(self):
        """Test case for layer_create_layer

        Creates a new empty layer.  # noqa: E501
        """
        pass

    def test_layer_create_layer_from_service(self):
        """Test case for layer_create_layer_from_service

        Creates a layer from an external service (ArcGIS, GeoJSON).  # noqa: E501
        """
        pass

    def test_layer_create_layer_from_zip(self):
        """Test case for layer_create_layer_from_zip

        Creates a layer from a ZIP file.  # noqa: E501
        """
        pass

    def test_layer_de_optimize_layer(self):
        """Test case for layer_de_optimize_layer

        Disables the ClickHouse optimization for this layer.  # noqa: E501
        """
        pass

    def test_layer_delete_clusters(self):
        """Test case for layer_delete_clusters

        Deletes the generated clusters for that layer.  # noqa: E501
        """
        pass

    def test_layer_delete_layer_by_id(self):
        """Test case for layer_delete_layer_by_id

        Deletes the layer.  # noqa: E501
        """
        pass

    def test_layer_duplicate_layer(self):
        """Test case for layer_duplicate_layer

        Duplicates the layer and its data.  # noqa: E501
        """
        pass

    def test_layer_generate_clusters(self):
        """Test case for layer_generate_clusters

        Generates clusters for the layer. The layer must be a point layer.  # noqa: E501
        """
        pass

    def test_layer_generate_layer_icon(self):
        """Test case for layer_generate_layer_icon

        Regenerates the layer's icon.  # noqa: E501
        """
        pass

    def test_layer_generate_layer_thumbnail(self):
        """Test case for layer_generate_layer_thumbnail

        Regenerates the layer's thumbnail.  # noqa: E501
        """
        pass

    def test_layer_get_data_table_by_layer_identifier(self):
        """Test case for layer_get_data_table_by_layer_identifier

        Get DataTable of layer by layer identifier.  # noqa: E501
        """
        pass

    def test_layer_get_data_tables_by_layer_identifier(self):
        """Test case for layer_get_data_tables_by_layer_identifier

        Get DataTables linked to layer by layer identifier.  # noqa: E501
        """
        pass

    def test_layer_get_file_description(self):
        """Test case for layer_get_file_description

        Stores a temporary file for an upcoming data insert or update and returns a description of the file's content.  # noqa: E501
        """
        pass

    def test_layer_get_layer_by_id(self):
        """Test case for layer_get_layer_by_id

        Retrives a specific layer.  # noqa: E501
        """
        pass

    def test_layer_get_layer_details(self):
        """Test case for layer_get_layer_details

        Gets the layer, its related maps, tables, columns and settings.  # noqa: E501
        """
        pass

    def test_layer_get_layers(self):
        """Test case for layer_get_layers

        Gets all the layers.  # noqa: E501
        """
        pass

    def test_layer_get_layers_extents(self):
        """Test case for layer_get_layers_extents

        Gets the layers' extents.  # noqa: E501
        """
        pass

    def test_layer_get_many_spatial_statistics_by_feature(self):
        """Test case for layer_get_many_spatial_statistics_by_feature

        Computes the area and/or length of a layer's features using any number of filters and spatial filters.  # noqa: E501
        """
        pass

    def test_layer_get_many_spatial_statistics_by_wkt(self):
        """Test case for layer_get_many_spatial_statistics_by_wkt

        Computes the area and/or length of a layer's features using any number of filters and spatial filters.  # noqa: E501
        """
        pass

    def test_layer_get_maps_by_layer_identifier(self):
        """Test case for layer_get_maps_by_layer_identifier

        Get Maps by layer friendly or system identifier.  # noqa: E501
        """
        pass

    def test_layer_get_spatial_statistics_by_feature(self):
        """Test case for layer_get_spatial_statistics_by_feature

        Computes the area and/or length of a layer's features. The features can be filtered by value and/or by geometry.  # noqa: E501
        """
        pass

    def test_layer_get_spatial_statistics_by_wkt(self):
        """Test case for layer_get_spatial_statistics_by_wkt

        Computes the area and/or length of a layer's features. The features can be filtered by value and/or by geometry.  # noqa: E501
        """
        pass

    def test_layer_get_transformation_settings(self):
        """Test case for layer_get_transformation_settings

        Gets the ids of the columns used to georeference the layer. Will return null if the layer was not created from georeferencing a data table.  # noqa: E501
        """
        pass

    def test_layer_optimize_layer(self):
        """Test case for layer_optimize_layer

        Optimizes the table queries with ClickHouse. The layer must be tiled.  # noqa: E501
        """
        pass

    def test_layer_set_data_column_unique_id(self):
        """Test case for layer_set_data_column_unique_id

        Sets the layer's unique identifier column. The column becomes the primary way to identify its rows.  # noqa: E501
        """
        pass

    def test_layer_set_unique_identifier(self):
        """Test case for layer_set_unique_identifier

        Sets the layer's unique identifier.  # noqa: E501
        """
        pass

    def test_layer_synchronize_layer(self):
        """Test case for layer_synchronize_layer

        Synchronizes the layer with its external service. The layer must be linked to an external data provider.  # noqa: E501
        """
        pass

    def test_layer_update_from_zip(self):
        """Test case for layer_update_from_zip

        Updates a layer from a ZIP. The ZIP content's format must match the layer.  # noqa: E501
        """
        pass

    def test_layer_update_layer(self):
        """Test case for layer_update_layer

        Updates the layer's properties.  # noqa: E501
        """
        pass

    def test_layer_update_layer_from_file_description(self):
        """Test case for layer_update_layer_from_file_description

        Updates a layer with a file uploaded using `Layer/{layerIdentifier}/getFileDescription`.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
