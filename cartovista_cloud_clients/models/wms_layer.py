# coding: utf-8

"""
    CartoVista REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class WmsLayer(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'identifier': 'str',
        'name': 'str',
        'wms_layer_name': 'str',
        'url': 'str',
        'owner_name': 'str',
        'public_access': 'bool',
        'can_edit': 'bool',
        'creation_time': 'datetime',
        'modified_time': 'datetime',
        'folder_id': 'str',
        'tenant_id': 'str',
        'extent': 'OneOfWmsLayerExtent',
        'get_legend_url': 'str',
        'version': 'str',
        'projection_attribute': 'str',
        'thumbnail_url': 'str'
    }

    attribute_map = {
        'id': 'id',
        'identifier': 'identifier',
        'name': 'name',
        'wms_layer_name': 'wmsLayerName',
        'url': 'url',
        'owner_name': 'ownerName',
        'public_access': 'publicAccess',
        'can_edit': 'canEdit',
        'creation_time': 'creationTime',
        'modified_time': 'modifiedTime',
        'folder_id': 'folderId',
        'tenant_id': 'tenantId',
        'extent': 'extent',
        'get_legend_url': 'getLegendUrl',
        'version': 'version',
        'projection_attribute': 'projectionAttribute',
        'thumbnail_url': 'thumbnailUrl'
    }

    def __init__(self, id=None, identifier=None, name=None, wms_layer_name=None, url=None, owner_name=None, public_access=None, can_edit=None, creation_time=None, modified_time=None, folder_id=None, tenant_id=None, extent=None, get_legend_url=None, version=None, projection_attribute=None, thumbnail_url=None):  # noqa: E501
        """WmsLayer - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._identifier = None
        self._name = None
        self._wms_layer_name = None
        self._url = None
        self._owner_name = None
        self._public_access = None
        self._can_edit = None
        self._creation_time = None
        self._modified_time = None
        self._folder_id = None
        self._tenant_id = None
        self._extent = None
        self._get_legend_url = None
        self._version = None
        self._projection_attribute = None
        self._thumbnail_url = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if identifier is not None:
            self.identifier = identifier
        if name is not None:
            self.name = name
        if wms_layer_name is not None:
            self.wms_layer_name = wms_layer_name
        if url is not None:
            self.url = url
        if owner_name is not None:
            self.owner_name = owner_name
        if public_access is not None:
            self.public_access = public_access
        if can_edit is not None:
            self.can_edit = can_edit
        if creation_time is not None:
            self.creation_time = creation_time
        if modified_time is not None:
            self.modified_time = modified_time
        if folder_id is not None:
            self.folder_id = folder_id
        if tenant_id is not None:
            self.tenant_id = tenant_id
        if extent is not None:
            self.extent = extent
        if get_legend_url is not None:
            self.get_legend_url = get_legend_url
        if version is not None:
            self.version = version
        if projection_attribute is not None:
            self.projection_attribute = projection_attribute
        if thumbnail_url is not None:
            self.thumbnail_url = thumbnail_url

    @property
    def id(self):
        """Gets the id of this WmsLayer.  # noqa: E501


        :return: The id of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WmsLayer.


        :param id: The id of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def identifier(self):
        """Gets the identifier of this WmsLayer.  # noqa: E501


        :return: The identifier of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this WmsLayer.


        :param identifier: The identifier of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._identifier = identifier

    @property
    def name(self):
        """Gets the name of this WmsLayer.  # noqa: E501


        :return: The name of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WmsLayer.


        :param name: The name of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def wms_layer_name(self):
        """Gets the wms_layer_name of this WmsLayer.  # noqa: E501


        :return: The wms_layer_name of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._wms_layer_name

    @wms_layer_name.setter
    def wms_layer_name(self, wms_layer_name):
        """Sets the wms_layer_name of this WmsLayer.


        :param wms_layer_name: The wms_layer_name of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._wms_layer_name = wms_layer_name

    @property
    def url(self):
        """Gets the url of this WmsLayer.  # noqa: E501


        :return: The url of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this WmsLayer.


        :param url: The url of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def owner_name(self):
        """Gets the owner_name of this WmsLayer.  # noqa: E501


        :return: The owner_name of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._owner_name

    @owner_name.setter
    def owner_name(self, owner_name):
        """Sets the owner_name of this WmsLayer.


        :param owner_name: The owner_name of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._owner_name = owner_name

    @property
    def public_access(self):
        """Gets the public_access of this WmsLayer.  # noqa: E501


        :return: The public_access of this WmsLayer.  # noqa: E501
        :rtype: bool
        """
        return self._public_access

    @public_access.setter
    def public_access(self, public_access):
        """Sets the public_access of this WmsLayer.


        :param public_access: The public_access of this WmsLayer.  # noqa: E501
        :type: bool
        """

        self._public_access = public_access

    @property
    def can_edit(self):
        """Gets the can_edit of this WmsLayer.  # noqa: E501


        :return: The can_edit of this WmsLayer.  # noqa: E501
        :rtype: bool
        """
        return self._can_edit

    @can_edit.setter
    def can_edit(self, can_edit):
        """Sets the can_edit of this WmsLayer.


        :param can_edit: The can_edit of this WmsLayer.  # noqa: E501
        :type: bool
        """

        self._can_edit = can_edit

    @property
    def creation_time(self):
        """Gets the creation_time of this WmsLayer.  # noqa: E501


        :return: The creation_time of this WmsLayer.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this WmsLayer.


        :param creation_time: The creation_time of this WmsLayer.  # noqa: E501
        :type: datetime
        """

        self._creation_time = creation_time

    @property
    def modified_time(self):
        """Gets the modified_time of this WmsLayer.  # noqa: E501


        :return: The modified_time of this WmsLayer.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_time

    @modified_time.setter
    def modified_time(self, modified_time):
        """Sets the modified_time of this WmsLayer.


        :param modified_time: The modified_time of this WmsLayer.  # noqa: E501
        :type: datetime
        """

        self._modified_time = modified_time

    @property
    def folder_id(self):
        """Gets the folder_id of this WmsLayer.  # noqa: E501


        :return: The folder_id of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._folder_id

    @folder_id.setter
    def folder_id(self, folder_id):
        """Sets the folder_id of this WmsLayer.


        :param folder_id: The folder_id of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._folder_id = folder_id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this WmsLayer.  # noqa: E501


        :return: The tenant_id of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this WmsLayer.


        :param tenant_id: The tenant_id of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._tenant_id = tenant_id

    @property
    def extent(self):
        """Gets the extent of this WmsLayer.  # noqa: E501


        :return: The extent of this WmsLayer.  # noqa: E501
        :rtype: OneOfWmsLayerExtent
        """
        return self._extent

    @extent.setter
    def extent(self, extent):
        """Sets the extent of this WmsLayer.


        :param extent: The extent of this WmsLayer.  # noqa: E501
        :type: OneOfWmsLayerExtent
        """

        self._extent = extent

    @property
    def get_legend_url(self):
        """Gets the get_legend_url of this WmsLayer.  # noqa: E501


        :return: The get_legend_url of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._get_legend_url

    @get_legend_url.setter
    def get_legend_url(self, get_legend_url):
        """Sets the get_legend_url of this WmsLayer.


        :param get_legend_url: The get_legend_url of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._get_legend_url = get_legend_url

    @property
    def version(self):
        """Gets the version of this WmsLayer.  # noqa: E501


        :return: The version of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this WmsLayer.


        :param version: The version of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def projection_attribute(self):
        """Gets the projection_attribute of this WmsLayer.  # noqa: E501


        :return: The projection_attribute of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._projection_attribute

    @projection_attribute.setter
    def projection_attribute(self, projection_attribute):
        """Sets the projection_attribute of this WmsLayer.


        :param projection_attribute: The projection_attribute of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._projection_attribute = projection_attribute

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this WmsLayer.  # noqa: E501


        :return: The thumbnail_url of this WmsLayer.  # noqa: E501
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this WmsLayer.


        :param thumbnail_url: The thumbnail_url of this WmsLayer.  # noqa: E501
        :type: str
        """

        self._thumbnail_url = thumbnail_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WmsLayer, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WmsLayer):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
