# coding: utf-8

"""
    CartoVista REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UploadJoinParameters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'layer_identifier': 'str',
        'data_table_target_column_number': 'int',
        'layer_target_column_identifier': 'str'
    }

    attribute_map = {
        'layer_identifier': 'layerIdentifier',
        'data_table_target_column_number': 'dataTableTargetColumnNumber',
        'layer_target_column_identifier': 'layerTargetColumnIdentifier'
    }

    def __init__(self, layer_identifier=None, data_table_target_column_number=None, layer_target_column_identifier=None):  # noqa: E501
        """UploadJoinParameters - a model defined in Swagger"""  # noqa: E501
        self._layer_identifier = None
        self._data_table_target_column_number = None
        self._layer_target_column_identifier = None
        self.discriminator = None
        if layer_identifier is not None:
            self.layer_identifier = layer_identifier
        if data_table_target_column_number is not None:
            self.data_table_target_column_number = data_table_target_column_number
        if layer_target_column_identifier is not None:
            self.layer_target_column_identifier = layer_target_column_identifier

    @property
    def layer_identifier(self):
        """Gets the layer_identifier of this UploadJoinParameters.  # noqa: E501


        :return: The layer_identifier of this UploadJoinParameters.  # noqa: E501
        :rtype: str
        """
        return self._layer_identifier

    @layer_identifier.setter
    def layer_identifier(self, layer_identifier):
        """Sets the layer_identifier of this UploadJoinParameters.


        :param layer_identifier: The layer_identifier of this UploadJoinParameters.  # noqa: E501
        :type: str
        """

        self._layer_identifier = layer_identifier

    @property
    def data_table_target_column_number(self):
        """Gets the data_table_target_column_number of this UploadJoinParameters.  # noqa: E501


        :return: The data_table_target_column_number of this UploadJoinParameters.  # noqa: E501
        :rtype: int
        """
        return self._data_table_target_column_number

    @data_table_target_column_number.setter
    def data_table_target_column_number(self, data_table_target_column_number):
        """Sets the data_table_target_column_number of this UploadJoinParameters.


        :param data_table_target_column_number: The data_table_target_column_number of this UploadJoinParameters.  # noqa: E501
        :type: int
        """

        self._data_table_target_column_number = data_table_target_column_number

    @property
    def layer_target_column_identifier(self):
        """Gets the layer_target_column_identifier of this UploadJoinParameters.  # noqa: E501


        :return: The layer_target_column_identifier of this UploadJoinParameters.  # noqa: E501
        :rtype: str
        """
        return self._layer_target_column_identifier

    @layer_target_column_identifier.setter
    def layer_target_column_identifier(self, layer_target_column_identifier):
        """Sets the layer_target_column_identifier of this UploadJoinParameters.


        :param layer_target_column_identifier: The layer_target_column_identifier of this UploadJoinParameters.  # noqa: E501
        :type: str
        """

        self._layer_target_column_identifier = layer_target_column_identifier

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UploadJoinParameters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UploadJoinParameters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
