# coding: utf-8

"""
    CartoVista REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'individual_values': 'list[IndividualValuesSimplifiedDTOOfDataQueryColumnDTO]',
        'server_cache_enabled': 'bool',
        'spatial_filter': 'OneOfIndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTOSpatialFilter'
    }

    attribute_map = {
        'individual_values': 'individualValues',
        'server_cache_enabled': 'serverCacheEnabled',
        'spatial_filter': 'spatialFilter'
    }

    def __init__(self, individual_values=None, server_cache_enabled=None, spatial_filter=None):  # noqa: E501
        """IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO - a model defined in Swagger"""  # noqa: E501
        self._individual_values = None
        self._server_cache_enabled = None
        self._spatial_filter = None
        self.discriminator = None
        if individual_values is not None:
            self.individual_values = individual_values
        if server_cache_enabled is not None:
            self.server_cache_enabled = server_cache_enabled
        if spatial_filter is not None:
            self.spatial_filter = spatial_filter

    @property
    def individual_values(self):
        """Gets the individual_values of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501


        :return: The individual_values of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :rtype: list[IndividualValuesSimplifiedDTOOfDataQueryColumnDTO]
        """
        return self._individual_values

    @individual_values.setter
    def individual_values(self, individual_values):
        """Sets the individual_values of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.


        :param individual_values: The individual_values of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :type: list[IndividualValuesSimplifiedDTOOfDataQueryColumnDTO]
        """

        self._individual_values = individual_values

    @property
    def server_cache_enabled(self):
        """Gets the server_cache_enabled of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501


        :return: The server_cache_enabled of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :rtype: bool
        """
        return self._server_cache_enabled

    @server_cache_enabled.setter
    def server_cache_enabled(self, server_cache_enabled):
        """Sets the server_cache_enabled of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.


        :param server_cache_enabled: The server_cache_enabled of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :type: bool
        """

        self._server_cache_enabled = server_cache_enabled

    @property
    def spatial_filter(self):
        """Gets the spatial_filter of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501


        :return: The spatial_filter of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :rtype: OneOfIndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTOSpatialFilter
        """
        return self._spatial_filter

    @spatial_filter.setter
    def spatial_filter(self, spatial_filter):
        """Sets the spatial_filter of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.


        :param spatial_filter: The spatial_filter of this IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :type: OneOfIndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTOSpatialFilter
        """

        self._spatial_filter = spatial_filter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IndividualValuesOnMultipleColumnsMessageDTOOfDataQueryColumnDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
