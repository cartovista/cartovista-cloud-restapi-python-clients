# coding: utf-8

"""
    CartoVista REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class IndividualValuesMessageDTOOfDataQueryColumnDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'data_column': 'OneOfIndividualValuesMessageDTOOfDataQueryColumnDTODataColumn',
        'maximum_allowed': 'int',
        'exclude_not_available_value': 'bool',
        'server_cache_enabled': 'bool',
        'spatial_filter': 'OneOfIndividualValuesMessageDTOOfDataQueryColumnDTOSpatialFilter'
    }

    attribute_map = {
        'data_column': 'dataColumn',
        'maximum_allowed': 'maximumAllowed',
        'exclude_not_available_value': 'excludeNotAvailableValue',
        'server_cache_enabled': 'serverCacheEnabled',
        'spatial_filter': 'spatialFilter'
    }

    def __init__(self, data_column=None, maximum_allowed=None, exclude_not_available_value=None, server_cache_enabled=None, spatial_filter=None):  # noqa: E501
        """IndividualValuesMessageDTOOfDataQueryColumnDTO - a model defined in Swagger"""  # noqa: E501
        self._data_column = None
        self._maximum_allowed = None
        self._exclude_not_available_value = None
        self._server_cache_enabled = None
        self._spatial_filter = None
        self.discriminator = None
        if data_column is not None:
            self.data_column = data_column
        if maximum_allowed is not None:
            self.maximum_allowed = maximum_allowed
        if exclude_not_available_value is not None:
            self.exclude_not_available_value = exclude_not_available_value
        if server_cache_enabled is not None:
            self.server_cache_enabled = server_cache_enabled
        if spatial_filter is not None:
            self.spatial_filter = spatial_filter

    @property
    def data_column(self):
        """Gets the data_column of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501


        :return: The data_column of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :rtype: OneOfIndividualValuesMessageDTOOfDataQueryColumnDTODataColumn
        """
        return self._data_column

    @data_column.setter
    def data_column(self, data_column):
        """Sets the data_column of this IndividualValuesMessageDTOOfDataQueryColumnDTO.


        :param data_column: The data_column of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :type: OneOfIndividualValuesMessageDTOOfDataQueryColumnDTODataColumn
        """

        self._data_column = data_column

    @property
    def maximum_allowed(self):
        """Gets the maximum_allowed of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501


        :return: The maximum_allowed of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :rtype: int
        """
        return self._maximum_allowed

    @maximum_allowed.setter
    def maximum_allowed(self, maximum_allowed):
        """Sets the maximum_allowed of this IndividualValuesMessageDTOOfDataQueryColumnDTO.


        :param maximum_allowed: The maximum_allowed of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :type: int
        """

        self._maximum_allowed = maximum_allowed

    @property
    def exclude_not_available_value(self):
        """Gets the exclude_not_available_value of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501


        :return: The exclude_not_available_value of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :rtype: bool
        """
        return self._exclude_not_available_value

    @exclude_not_available_value.setter
    def exclude_not_available_value(self, exclude_not_available_value):
        """Sets the exclude_not_available_value of this IndividualValuesMessageDTOOfDataQueryColumnDTO.


        :param exclude_not_available_value: The exclude_not_available_value of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :type: bool
        """

        self._exclude_not_available_value = exclude_not_available_value

    @property
    def server_cache_enabled(self):
        """Gets the server_cache_enabled of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501


        :return: The server_cache_enabled of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :rtype: bool
        """
        return self._server_cache_enabled

    @server_cache_enabled.setter
    def server_cache_enabled(self, server_cache_enabled):
        """Sets the server_cache_enabled of this IndividualValuesMessageDTOOfDataQueryColumnDTO.


        :param server_cache_enabled: The server_cache_enabled of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :type: bool
        """

        self._server_cache_enabled = server_cache_enabled

    @property
    def spatial_filter(self):
        """Gets the spatial_filter of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501


        :return: The spatial_filter of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :rtype: OneOfIndividualValuesMessageDTOOfDataQueryColumnDTOSpatialFilter
        """
        return self._spatial_filter

    @spatial_filter.setter
    def spatial_filter(self, spatial_filter):
        """Sets the spatial_filter of this IndividualValuesMessageDTOOfDataQueryColumnDTO.


        :param spatial_filter: The spatial_filter of this IndividualValuesMessageDTOOfDataQueryColumnDTO.  # noqa: E501
        :type: OneOfIndividualValuesMessageDTOOfDataQueryColumnDTOSpatialFilter
        """

        self._spatial_filter = spatial_filter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IndividualValuesMessageDTOOfDataQueryColumnDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IndividualValuesMessageDTOOfDataQueryColumnDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
